package org.xtext.example.mydsl.generator

import fr.ice.fsm.model.fsm.FSM
import fr.ice.fsm.model.fsm.State
import fr.ice.fsm.model.fsm.Transition

class VisitorCompil implements Visitor {
	val NEWLINE = "\r\n"
	val TAB = "\t"
	var numState = 0	//Contient le numéro du prochain état
	var numTrans = 0	//Contient le numéro de la prochaine transition
	
	override visitFSM(FSM f){
		var name = f.getName()
		
		var res = new StringBuilder()
		
		res.append("public class usageExemple {"+NEWLINE+TAB+"public void main(String[] args) {"+NEWLINE+TAB+"Initialization"+NEWLINE)
		res.append(TAB+"//We start by creating the context.")
		res.append(TAB+"FSMContext context = new FSMContext();"+NEWLINE)
		
		for(s: f.getState()){
			res.append(TAB+"//Then we create the states."+NEWLINE)
			res.append(s.accept(this))
		}
		
		for(t: f.getTransition()){
			res.append(TAB+"//We create the transitions."+NEWLINE)
			res.append(t.accept(this))
		}
		
		return res
	}
	
	override visitState(State s){
		var entry = s.getEntry()
		var name = s.getName()
		var init = s.isIsInitState()
		
		var res = new StringBuilder()
		
		res.append(TAB+"FSMState s"+numState+" = new FSMState(context);"+NEWLINE)
		
		return res
	}
	
	override visitTransition(Transition t){
		var end_state = t.getEnd_state().getName()
		var input = t.getInput()
		var name = t.getName()
		var start_state = t.getStart_state().getName()
		
		var res = new StringBuilder()
		
		return res
		
	}
	
	
	
	//to delete
	def StringBuilder accept(State state, VisitorCompil v){
		return v.visitState(state)
	}
	def StringBuilder accept(Transition transition, VisitorCompil v){
		return v.visitTransition(transition)
	}
}